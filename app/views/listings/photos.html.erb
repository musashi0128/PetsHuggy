<%= render 'partial/navbar' %>
<div class="container">
    <div class="col-md-3">
        <!-- vertical-navbar -->
        <%= render 'partial/verticalnavbar'%>
    </div>
    <div class="col-md-9">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="text-center">
                    <span style="font-size:24px;">リスティング写真の編集</span>
                </div>
            </div>

            <div class="panel-body">          
                <%= form_for @photo, html:{multipart: true,class:"dropzone", id:"my-dropzone" } do |f| %> 
            		
            		<%= f.hidden_filed :listing_id, value: @listing.id %>
                    <div class="dz-message needsclick">
                        <h3>ファイルをここにドロップしてください。</h3>
                        <strong>アップロードするにはここをクリックしてください</strong>
                    </div>
                    
                    <div class="fallback">
                        <%= f.file_field :image %>
                        <%= f.submit "Upload image" %>
                    </div>

                <% end %>
            </div>
        </div>
    </div>
</div>

<!-- dropzone.js -->
<script type="text/javascript">
	$(function(){
		
		Dropzone.autoDiscorever = false;
		
		//photos_controller.rbのcreateアクションが呼ばれる
		$("#my-dropzone").dropzone({
			maxFilesize: 200, // ファイルサイズ200MBまで
			addRemoveLinks: true, // 削除リンク,Cancelリンクをすb手のpreviewファイルにつける。
			paramName: 'photo[image]', // パラメーターの名前
			success: function(file, response) {
				// file.previewElementでpreview要素のhtmlにアクセスできる。
				
				// add .dz-success class to file.previewElement
				$(file.previewElemet).addClass('dz-success');
				//add .resoponse.uploadId to .dz-remove class
				$(file.previewElemet).find('.dz-remove').attr('id', response.photoId);
			},
			removefile: function(file) {
				// 選択削除されたfileのidを取得
				var id = $(file.previewTemplate).find('.dz-remove').attr('id');
				
				// call photos_controller.rb destroy action
				$.ajax({
					type: 'DELETE',
					url: "/photos/" + id,
					success: function(data) {
						console.log(data.message);
					}
				});

				var previewElemet;
				// 条件式 ? 式1 : 式2　条件式の値がtrue=>式1、false=>式2返します。
      			//parentNode => 親ノード（一つ上のhtml要素)を取得.
      			//(void 0) => 何も処理しない
      			// リスト（親ノード）から、プレビュー要素を消すという記述
      			return (previewElemet = file.previewElemet) != null ? (previewElemet.parentNode.removeChild(file.previewelement)) : (void 0);
			},

			// init executed at first when Page loaded
		    init: function() {
		      //this equal dropzone
		      var me = this;

		      //meに"complete"イベントを定義
		      me.on("complete", function(file) {
		       $(file.previewTemplate).find('.dz-remove').text("削除する");
		      }); 
		      //call list function in photos_controller.rb with get method
		      $.ajax({
		       type: "GET",
		       url: "/photos/list",
		       data: {'listing_id': <%= @listing.id %>},
		           dataType: 'json',
		       success: function(data){
		           $.each(data.images, function(key, value) {
		             if (data.images != undefined && data.images.length > 0) {
		               me.emit("addedfile", value); //addedfileイベントをvalueのデータで実行する
		               me.emit("thumbnail", value, value.src);//thumbnailイベントをvalueのデータで実行する
		               me.emit("complete", value);  //completeイベントをvalueのデータで実行する
		               $(value._removeLink).attr("id", value.id); //valueの_removeLinkのidにvalue.idを追加
		             }
		           });
		       }
		      });
		    }
		});
	});

</script>



